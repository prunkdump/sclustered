#! /usr/bin/perl -w -CD
use strict;
use warnings;
use experimental 'smartmatch';

my $printerListFilePath = "/etc/cups/printers_list.conf";

#######################################
# get the list of printers to install #
#######################################
my @targetPrinters;

###################################################################
# the /etc/cups/printers_list.conf  file lines are :              #
# <name> <server> <[_]target> [default]                           #
#                                                                 #
# name : local name of the printer                                #
# server : the print server to use                                #
# target : the name of the printer on the printer server          #
#          (if "_" precede the name, the PPD will be downloaded)  #
# default : set printer as default printer                        #
###################################################################

open(my $printerListFile, "< $printerListFilePath") or die "Printer list file not found !";
while( my $printerLine = <$printerListFile> ) {

   chomp($printerLine);

   # check for comments Â #
   if( ! ($printerLine =~ m/^\s*#/) ) {

      # parse params #
      my @printerParams = split(' ', $printerLine);

      # <name> <server> <[@]target> [default] #
      if( @printerParams >= 3 ) {

         my %targetPrinter;

         # get params #
         if( $printerParams[0] =~ m/^\s*_(\S+)$/ ) {
            $targetPrinter{name} = $1;
          } else {
            $targetPrinter{name} = $printerParams[0];
         }

         $targetPrinter{server} = $printerParams[1];
         if( $printerParams[2] =~ m/^_(\S+)$/ ) {
            $targetPrinter{target} = $1;
            $targetPrinter{localPPD} = "true";
         } else {
            $targetPrinter{target} = $printerParams[2];
            $targetPrinter{localPPD} = "false";
         }
         if( @printerParams >= 4 && $printerParams[3] eq "default" ) {
            $targetPrinter{default} = "true";
         }

         # push #
         push @targetPrinters, \%targetPrinter; 
      }
   }
}
close($printerListFile);


##########################################
# get the list of installed ipp printers #
##########################################
my @installedPrinters;
my @implicitPrinters;

if( -f "/etc/cups/printers.conf" ) {

   open(my $cupsPrintersFile, "< /etc/cups/printers.conf") or die "Can't get cups printers list !";

   my $currentPrinter;

   while(my $cupsPrinterLine = <$cupsPrintersFile> ) {

      chomp($cupsPrinterLine);


      ##########################################
      # check beginning of printer description #
      ##########################################
      if( $cupsPrinterLine =~ m/<Printer (.*)>$/ ) {
         my %newPrinter = ();
         $newPrinter{name} = $1;
         $currentPrinter = \%newPrinter;
      }

      ####################################
      # check end of printer description #
      ####################################
      if( $cupsPrinterLine eq "</Printer>" ) {

         ###############################################
         # check if PPD is local or not (default true) #
         # non local PPD use IPP Everywhere            #
         ###############################################
         $currentPrinter->{localPPD} = "true";

         # check if PPD present #
         my $printerPPDPath = "/etc/cups/ppd/$currentPrinter->{name}.ppd";

         if( -e $printerPPDPath ) {
            $currentPrinter->{ppd} = "true";

            # check if PPD is a everywhere one #
            open(my $printerPPD, "< $printerPPDPath") or die "Can't open PPD file !";
            while( my $ppdLine = <$printerPPD> ) {
               if( $ppdLine =~ m/IPP Everywhere/ ) {
                  $currentPrinter->{localPPD} = "false";
                  last;
               }
            }
            close($printerPPD);
         } else {
            $currentPrinter->{localPPD} = "false";
         }

         ##########################
         # save printer if needed #
         ##########################
         if( defined($currentPrinter->{server}) && defined($currentPrinter->{target}) ) {
            push @installedPrinters, $currentPrinter;
         }

         ########
         # next #
         ########
         $currentPrinter  = undef;
      }

      ########################
      # check printer params #
      ########################
      if( $currentPrinter ) {

         # Check DeviceURI #
         if( $cupsPrinterLine =~ m/^DeviceURI\s+ipps?:\/\/(\S+)\/printers\/(\S+)$/ ) {
            $currentPrinter->{server} = $1;
            $currentPrinter->{target} = $2;
         }

         # check shared #
         if( $cupsPrinterLine =~ m/^Shared\s+(.*)$/ ) {
            $currentPrinter->{shared} = $1;
         }

         # check state #
         if( $cupsPrinterLine =~ m/^State\s+(.*)$/ ) {
            $currentPrinter->{state} = $1;
         }
      }
   }
}

      
##################################
# remove the installed printers  #
# that are not in target         #
# or with bad params             #
# or without PPD                 #
# or shared                      #
# or where state is stopped      # 
##################################
foreach my $installedPrinter (@installedPrinters) {

   my $printerFound = "false";

   # if no PPD or Shared or Stopped -> delete #
   if( defined($installedPrinter->{ppd}) &&
       $installedPrinter->{shared} eq "No" &&
       $installedPrinter->{state} ne "Stopped" ) {

      # check printer match on target #
      foreach my $targetPrinter (@targetPrinters) {

         if( $installedPrinter->{name} eq $targetPrinter->{name} &&
             $installedPrinter->{server} eq $targetPrinter->{server} &&
             $installedPrinter->{target} eq $targetPrinter->{target} &&
             $installedPrinter->{localPPD} eq $targetPrinter->{localPPD} ) {
            $printerFound = "true";
            $targetPrinter->{set} = "true";
            last;
         }
      }
   }

   # delete if needed #
   if( $printerFound eq "false" ) {
      print("Deleting $installedPrinter->{name} \n");
      system("lpadmin -x $installedPrinter->{name}");
   }
}



###########################
# add the target printers #
# and set the default     #
###########################
foreach my $targetPrinter (@targetPrinters) {

   # install or update localPPD printers #
   if( $targetPrinter->{localPPD} eq "true" ) {

      # download the ppd #
      system("wget --quiet --no-proxy -O /tmp/$targetPrinter->{target}.ppd http://$targetPrinter->{server}:631/printers/$targetPrinter->{target}.ppd");
      system('sed -i ' . "'" . 's/^\(\*cupsFilter: *\"\)\(.*\)\( .*\"\)/\1\2 -\"/' . "'" . " /tmp/$targetPrinter->{target}.ppd");

      if( $targetPrinter->{set} ) {
         # just replace the ppd #
         system("cp /tmp/$targetPrinter->{target}.ppd /etc/cups/ppd/$targetPrinter->{name}.ppd");
      } else {
         # install the printer #
         system("lpadmin -p $targetPrinter->{name} -o printer-is-shared=false -E -v ipp://$targetPrinter->{server}/printers/$targetPrinter->{target} -P /tmp/$targetPrinter->{target}.ppd");
      }
   } 

   # other printers #
   else {

      # install if not exist #
      if( ! $targetPrinter->{set} ) {   
         system("lpadmin -p $targetPrinter->{name} -o printer-is-shared=false -E -v ipp://$targetPrinter->{server}/printers/$targetPrinter->{target} -m everywhere");
      }
   }

   # set as default if needed #
   if( $targetPrinter->{default} ) {
      system("lpadmin -d $targetPrinter->{name}");
   }
}

