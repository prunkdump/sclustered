#! /bin/bash

################################################
# This script create a base Samba AD structure #
# so it need to be run just one time when      #
# installing the first DC. Just after the      #
# domain provision.                            #
#                                              #
# Running this script on a already running DC  #
# can break the domain !                       #
# So this script start by checking that the    #
# domain is already provisionned.              #
# But also that the AD structure is not        #
# already created by this script itself.       #
################################################

# check if the SAM ldb file is present #
if [ ! -e "<%= @private_path %>/sam.ldb"]; then
   echo "Cannot find SAM database ldb file ! Does the domain is provisionned ?"
   exit 1
fi

# ensure ldbsearch works, search the root #
ldbsearch --show-binary -H <%= @private_path %>/sam.ldb -s base -b <%= @base_dn %> dn
if [ "$?" -ne "0" ]; then
   echo "Cannot find AD database base DN : <%= @base_dn %>"
   echo "Does the domain is provisionned ?"
   exit 1
fi

# now search for the users OU to know if this script #
# was already be run #
samSearch=$(ldbsearch --show-binary -H <%= @private_path %>/sam.ldb -s base -b OU=<%= @users_ou %>,<%= @base_dn %> ou)
if [ "$?" -eq "0" ]; then
   if echo "$samSearch" | grep -q '^dn: OU=<%= @users_ou %>'; then
      echo "Samba AD database seems already configured !"
      exit 1
   fi
fi

#################################
# OK now configure the database #
#################################

# parse args #
if [ $# != 1 ]; then
   echo 'Admin pass not given !'
   exit 1;
fi
adminPass=$1

# check password #
if ! echo "$adminPass" | kinit administrator@<%= @realm %>; then
  echo 'Wrong admin password !'
  exit 1
fi

###################
# add dns entries #
###################

samba-tool dns zonecreate localhost <%= @reverse_zone %> -Uadministrator --password=$adminPass
samba-tool dns add localhost <%= @reverse_zone %>  <%= @host_reverse_entry %> PTR <%= @hostname %>.<%= @domain %> -Uadministrator --password=$adminPass
# !! need restart bind !!#
systemctl restart bind9

#####################
# password settings #
#####################
samba-tool domain passwordsettings set --complexity=off --min-pwd-length=2 --min-pwd-age=0 -Uadministrator --password=$adminPass

###########
# base ou #
###########
echo "\
dn: OU=<%= @users_ou %>,<%= @base_dn %>
changetype: add
objectClass: top
objectClass: organizationalunit

dn: OU=<%= @shares_ou %>,<%= @base_dn %>
changetype: add
objectClass: top
objectClass: organizationalunit
" > /tmp/create_base_ou.ldif

ldbmodify -H <%= @private_path %>/sam.ldb /tmp/create_base_ou.ldif
rm /tmp/create_base_ou.ldif


###############
# base groups #
###############

# create the groups #
s4groupadd <%= @users_group %> -d OU=<%= @users_ou %>
s4groupadd <%= @shares_group %> -d OU=<%= @shares_ou %>
#samba-tool group add <%= @users_group %> --groupou OU=<%= @users_ou %>
#samba-tool group add <%= @shares_group %> --groupou OU=<%= @shares_ou %>
#samba-tool group add <%= @teachers_group %> --groupou OU=<%= @teachers_ou %>,OU=<%= @users_ou %>
#samba-tool group add <%= @students_group %> --groupou OU=<%= @students_ou %>,OU=<%= @users_ou %>

# add gid attribute to Domain Users #
echo "\
dn: CN=Domain Users,CN=Users,<%= @base_dn %>
changetype: modify
add:objectclass
objectclass: posixGroup
-
add: gidnumber
gidnumber: 5100000
" > /tmp/Domain_Users.ldif

ldbmodify -H <%= @private_path %>/sam.ldb /tmp/Domain_Users.ldif
rm /tmp/Domain_Users.ldif

#PosixfyGroup 'Domain Users' CN=Users
#PosixfyGroup <%= @users_group %> OU=<%= @users_ou %>
#PosixfyGroup <%= @shares_group %> OU=<%= @shares_ou %>
#PosixfyGroup <%= @teachers_group %> OU=<%= @teachers_ou %>,OU=<%= @users_ou %>
#PosixfyGroup <%= @students_group %> OU=<%= @students_ou %>,OU=<%= @users_ou %>

###############
# main policy #
###############
gpoId=<%= @maingpo_id %>
gpoName=<%= @maingpo_name %>
gpoVersion=<%= @maingpo_version %>

# add to sam #
echo "\
dn: CN=$gpoId,CN=Policies,CN=System,<%= @base_dn %>
changetype: add
objectClass: top
objectClass: container
objectClass: groupPolicyContainer
displayName: $gpoName
flags: 0
versionNumber: $gpoVersion
gPCFunctionalityVersion: 2
gPCFileSysPath: \\\\<%= @domain %>\\sysvol\\<%= @domain %>\\Policies\\$gpoId
gPCUserExtensionNames: [<% @maingpo_user_extensions.each do |extension| %><%= extension %><% end %>]

dn: CN=User,CN=$gpoId,CN=Policies,CN=System,<%= @base_dn %>
changetype: add
objectClass: top
objectClass: container

dn: CN=Machine,CN=$gpoId,CN=Policies,CN=System,<%= @base_dn %>
changetype: add
objectClass: top
objectClass: container
" > /tmp/add_base_gpo.ldif

ldbmodify -H <%= @private_path %>/sam.ldb /tmp/add_base_gpo.ldif
rm /tmp/add_base_gpo.ldif

# link main gpo #
samba-tool gpo setlink OU=<%= @users_ou %>,<%= @base_dn %> $gpoId -Uadministrator --password=$adminPass
samba-tool ntacl sysvolreset -Uadministrator --password=$adminPass


#TO DO
#######################################
# add Domain Admins to Print operator #
#######################################
#net rpc rights grant "SAMDOM\Domain Admins" SePrintOperatorPrivilege -U "SAMDOM\administrator"
